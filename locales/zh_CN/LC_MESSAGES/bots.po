# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, oTree team
# This file is distributed under the same license as the oTree package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: oTree \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-31 23:32+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/bots.rst:4
msgid "Bots"
msgstr ""

#: ../../source/bots.rst:6
msgid ""
"Bots simulate participants playing your app. They click through each "
"page, fill out forms, and make sure that everything works properly."
msgstr ""

#: ../../source/bots.rst:9
msgid ""
"This feature is designed for lazy people who would prefer for oTree to "
"automatically test their apps for them. And oTree Studio can even design "
"your bot code for you, so the whole process (writing and running bots) "
"involves barely any effort."
msgstr ""

#: ../../source/bots.rst:17
msgid "Running bots"
msgstr ""

#: ../../source/bots.rst:19
msgid "Add bots to your app (see instructions below)"
msgstr ""

#: ../../source/bots.rst:20
msgid "In your session config, set ``use_browser_bots=True``."
msgstr ""

#: ../../source/bots.rst:21
msgid ""
"Run your server and create a session. The pages will auto-play with "
"browser bots, once the start links are opened."
msgstr ""

#: ../../source/bots.rst:23
msgid "If using Heroku, make sure the second dyno is enabled."
msgstr ""

#: ../../source/bots.rst:26
msgid "Writing tests"
msgstr ""

#: ../../source/bots.rst:28
msgid ""
"In oTree Studio, go to the \"Tests\" section of your app. Click the "
"button to auto-write bots code. If you want to refine the code that was "
"generated (such as adding ``expect()`` statements), read the below "
"sections."
msgstr ""

#: ../../source/bots.rst:34
msgid "If you are using a text editor, go to ``tests.py``."
msgstr ""

#: ../../source/bots.rst:37
msgid "Submitting pages"
msgstr ""

#: ../../source/bots.rst:39
msgid "You should make one ``yield`` per page submission. For example:"
msgstr ""

#: ../../source/bots.rst:46
msgid ""
"Here, we first submit the ``Start`` page, which does not contain a form. "
"The following page has 2 form fields, so we submit a dict."
msgstr ""

#: ../../source/bots.rst:49
msgid ""
"The test system will raise an error if the bot submits invalid input for "
"a page, or if it submits pages in the wrong order."
msgstr ""

#: ../../source/bots.rst:52
msgid "You use ``if`` statements to play any player or round number. For example:"
msgstr ""

#: ../../source/bots.rst:64
msgid ""
"Your ``if`` statements can depend on ``self.player``, ``self.group``, "
"``self.round_number``, etc."
msgstr ""

#: ../../source/bots.rst:67
msgid "Ignore wait pages when writing bots."
msgstr ""

#: ../../source/bots.rst:70
msgid "Rounds"
msgstr ""

#: ../../source/bots.rst:72
msgid ""
"Your bot code should just play 1 round at a time. oTree will "
"automatically execute it ``num_rounds`` times."
msgstr ""

#: ../../source/bots.rst:78
msgid "expect()"
msgstr ""

#: ../../source/bots.rst:82
msgid ""
"The ``expect()`` function was introduced in September 2019. Previously we"
" recommended using ``assert`` statements, which are still OK but "
"``expect()`` can report errors more clearly."
msgstr ""

#: ../../source/bots.rst:86
msgid ""
"You can use ``expect`` statements to ensure that your code is working as "
"you expect."
msgstr ""

#: ../../source/bots.rst:88
msgid "For example:"
msgstr ""

#: ../../source/bots.rst:99
msgid ""
"If ``self.player.num_apples`` is not 99, then you will be alerted with an"
" error."
msgstr ""

#: ../../source/bots.rst:101
msgid ""
"You can also use expect with 3 arguments, like "
"``expect(self.player.budget, '<', 100)``. This will verify that "
"``self.player.budget`` is less than 100. You can use the following "
"operators: ``'<'``, ``'<='``, ``'=='``, ``'>='``, ``'>'``, ``'!='``, "
"``'in'``, ``'not in'``."
msgstr ""

#: ../../source/bots.rst:114
msgid "Testing form validation"
msgstr ""

#: ../../source/bots.rst:116
msgid ""
"If you use :ref:`form validation <form-validation>`, you should test that"
" your app is correctly rejecting invalid input from the user, by using "
"``SubmissionMustFail()``."
msgstr ""

#: ../../source/bots.rst:120
msgid "For example, let's say you have this page:"
msgstr ""

#: ../../source/bots.rst:133
msgid "Here is how to test that it is working properly:"
msgstr ""

#: ../../source/bots.rst:142
msgid ""
"The bot will submit ``MyPage`` twice. If the first submission "
"**succeeds**, an error will be raised, because it is not supposed to "
"succeed."
msgstr ""

#: ../../source/bots.rst:147
msgid "Checking the HTML"
msgstr ""

#: ../../source/bots.rst:149
msgid ""
"``self.html`` contains the HTML of the page you are about to submit. You "
"can use this together with ``expect()``:"
msgstr ""

#: ../../source/bots.rst:166
msgid ""
"``self.html`` is updated with the next page's HTML, after every ``yield``"
" statement. Linebreaks and extra spaces are ignored."
msgstr ""

#: ../../source/bots.rst:170
msgid "Automatic HTML checks"
msgstr ""

#: ../../source/bots.rst:172
msgid ""
"An error will be raised if the bot is trying to submit form fields that "
"are not actually found in the page's HTML, or if the page's HTML is "
"missing a submit button."
msgstr ""

#: ../../source/bots.rst:175
msgid ""
"However, the bot system is not able to see fields and buttons that are "
"added dynamically with JavaScript. In these cases, you should disable the"
" HTML check by using ``Submission`` with ``check_html=False``. For "
"example, change this:"
msgstr ""

#: ../../source/bots.rst:183
msgid "to this:"
msgstr ""

#: ../../source/bots.rst:190
msgid ""
"(If you used ``Submission`` without ``check_html=False``, the two code "
"samples would be equivalent.)"
msgstr ""

#: ../../source/bots.rst:196
msgid "Simulate a page timeout"
msgstr ""

#: ../../source/bots.rst:198
msgid "You can use ``Submission`` with ``timeout_happened=True``:"
msgstr ""

#: ../../source/bots.rst:206
msgid "Advanced features"
msgstr ""

#: ../../source/bots.rst:208
msgid "See :ref:`bots_advanced`"
msgstr ""

