# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, oTree team
# This file is distributed under the same license as the oTree package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: oTree \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-31 23:32+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/mturk.rst:5
msgid "Mechanical Turk"
msgstr ""

#: ../../source/mturk.rst:8
msgid "Overview"
msgstr ""

#: ../../source/mturk.rst:10
msgid "oTree provides integration with Amazon Mechanical Turk (MTurk):"
msgstr ""

#: ../../source/mturk.rst:12
msgid "From oTree's admin interface, you publish your session to MTurk."
msgstr ""

#: ../../source/mturk.rst:13
msgid "Workers on Mechanical Turk participate in your session."
msgstr ""

#: ../../source/mturk.rst:14
msgid ""
"From oTree's admin interface, you send each participant their "
"participation fee and bonus (payoff)."
msgstr ""

#: ../../source/mturk.rst:18
msgid "Installation"
msgstr ""

#: ../../source/mturk.rst:25
msgid "MTurk template"
msgstr ""

#: ../../source/mturk.rst:27
msgid "Put the following inside your ``mturk_template.html``:"
msgstr ""

#: ../../source/mturk.rst:54
msgid ""
"You can easily test out the appearance by putting it in an .html file on "
"your desktop, then double-clicking the HTML file to open it in your "
"browser. Modify the content inside the ``<crowd-form>`` as you wish, but "
"make sure it has the following:"
msgstr ""

#: ../../source/mturk.rst:58
msgid ""
"The link to the study, which should look like ``<a class=\"otree-"
"link\">Link text</a>``. Once the user has accepted the assignment, oTree "
"will automatically add the ``href`` to those links to make them point to "
"your study."
msgstr ""

#: ../../source/mturk.rst:60
msgid ""
"If you want the completion code to be displayed in the oTree Admin "
"interface (Payments tab), you need a ``<crowd-input>`` named "
"``completion_code``."
msgstr ""

#: ../../source/mturk.rst:64
msgid "Making your session work on MTurk"
msgstr ""

#: ../../source/mturk.rst:66
msgid ""
"On the last page of your study, give the user a completion code. For "
"example, you can simply display: \"You have completed the study. Your "
"completion code is TRUST2020.\" If you like, you can generate unique "
"completion codes. You don't need to worry too much about completion "
"codes, because oTree tracks each worker by their MTurk ID and displays "
"that in the admin interface and shows whether they arrived on the last "
"page. The completion code is just an extra layer of verification, and it "
"gives workers a specific objective which they are used to having."
msgstr ""

#: ../../source/mturk.rst:77
msgid "Extra steps for non-Studio users"
msgstr ""

#: ../../source/mturk.rst:79
msgid ""
"If you are not using oTree Studio, you need to additionally follow the "
"steps :ref:`here <mturknostudio>`."
msgstr ""

#: ../../source/mturk.rst:83
msgid "Local Sandbox testing"
msgstr ""

#: ../../source/mturk.rst:85
msgid ""
"Before launching a study, you must create an employer account with MTurk,"
" to get your ``AWS_ACCESS_KEY_ID`` and ``AWS_SECRET_ACCESS_KEY``."
msgstr ""

#: ../../source/mturk.rst:88
msgid ""
"You can obtain these credentials `here "
"<https://console.aws.amazon.com/iam/home?#security_credential>`__:"
msgstr ""

#: ../../source/mturk.rst:93
msgid ""
"To test in the MTurk Sandbox locally, and see how it will appear to "
"workers, you need to store these credentials onto your computer."
msgstr ""

#: ../../source/mturk.rst:97
msgid ""
"If using Windows, search for \"environment variables\" in the control "
"panel, and create 2 environment variables so it looks like this:"
msgstr ""

#: ../../source/mturk.rst:103
msgid ""
"On Mac, put your credentials into your ``~/.bash_profile`` file like "
"this::"
msgstr ""

#: ../../source/mturk.rst:108
msgid ""
"Restart your command prompt and run oTree. From the oTree admin "
"interface, click on \"Sessions\" and then, on the button that says "
"\"Create New Session\", select \"For MTurk\":"
msgstr ""

#: ../../source/mturk.rst:115
msgid "Set environment variables on your web server"
msgstr ""

#: ../../source/mturk.rst:117
msgid ""
"If using Heroku, go to your App Dashboard's \"settings\", and set the "
"config vars ``AWS_ACCESS_KEY_ID`` and ``AWS_SECRET_ACCESS_KEY``."
msgstr ""

#: ../../source/mturk.rst:123
msgid "Qualification requirements"
msgstr ""

#: ../../source/mturk.rst:125
msgid ""
"oTree uses boto3 syntax for qualification requirements. Here is an "
"example with 2 qualification requirements that you can paste into your "
"``qualification_requirements`` setting:"
msgstr ""

#: ../../source/mturk.rst:143
msgid ""
"Here is how you would require workers from the US. "
"(`00000000000000000071` is the code for a location-based qualification.)"
msgstr ""

#: ../../source/mturk.rst:156
msgid ""
"See the `MTurk API reference "
"<http://docs.aws.amazon.com/AWSMechTurk/latest/AWSMturkAPI/ApiReference_QualificationRequirementDataStructureArticle.html>`__."
" (However, note that the code examples there are in JavaScript, so you "
"would need to modify the syntax to make it work in Python, e.g. adding "
"quotes around dictionary keys.)"
msgstr ""

#: ../../source/mturk.rst:161
msgid ""
"Note: when you are in sandbox mode, oTree ignores qualification "
"requirements."
msgstr ""

#: ../../source/mturk.rst:164
msgid "Preventing retakes (repeat workers)"
msgstr ""

#: ../../source/mturk.rst:166
msgid ""
"To prevent a worker from participating twice, you can grant a "
"Qualification to each worker in your study, and then block people who "
"already have this Qualification."
msgstr ""

#: ../../source/mturk.rst:170
msgid ""
"Login to your MTurk requester account and create a qualification. Go to "
"your oTree MTurk settings and paste that qualification ID into "
"``grant_qualification_id``. Then, add an entry to "
"``qualification_requirements``:"
msgstr ""

#: ../../source/mturk.rst:182
msgid "Multiplayer games & dropouts"
msgstr ""

#: ../../source/mturk.rst:184
msgid ""
"Games that involve wait pages are difficult on Mechanical Turk, because "
"some participants drop out or delay starting the game until some time "
"after accepting the assignment."
msgstr ""

#: ../../source/mturk.rst:189
msgid "To mitigate this, see the recommendations in :ref:`wait-page-stuck`."
msgstr ""

#: ../../source/mturk.rst:191
msgid ""
"When you create a session with N participants for MTurk, oTree actually "
"creates (N x 2) participants, because spares are needed in case some "
"MTurk workers start but then return the assignment."
msgstr ""

#: ../../source/mturk.rst:196
msgid "Managing your HITs"
msgstr ""

#: ../../source/mturk.rst:198
msgid ""
"oTree provides the ability to approve/reject assignments, send bonuses, "
"and expire HITs early. If you want to do anything beyond this (e.g. "
"extend expiration date, interact with workers, send custom bonuses, etc),"
" you will need to install the `MTurk command-line tools "
"<https://aws.amazon.com/cli/>`__ or use the 3rd party `Manage HITs "
"Individually <https://manage-hits-"
"individually.s3.amazonaws.com/v4.0/index.html#/credentials>`__ tool."
msgstr ""

#: ../../source/mturk.rst:209
msgid "Misc notes"
msgstr ""

#: ../../source/mturk.rst:211
msgid ""
"If you are publishing to MTurk using another service like TurkPrime, you "
"may not need to follow the steps on this page."
msgstr ""

