# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, oTree team
# This file is distributed under the same license as the oTree package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: oTree\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-19 01:38+0800\n"
"PO-Revision-Date: 2020-10-20 00:29+0800\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: zh_CN\n"
"X-Generator: Poedit 2.4.1\n"

#: ../../source/tutorial/intro.rst:2
msgid "Tutorial"
msgstr "教程"

#: ../../source/tutorial/intro.rst:4
msgid "This tutorial will cover the creation of several apps."
msgstr "本教程包括几个应用的创建。"

#: ../../source/tutorial/intro.rst:6
msgid ""
"First, you should be familiar with Python; we have a simple tutorial here: :ref:"
"`python_tutorial`."
msgstr "首先，你必须熟悉Python: :ref:`python_tutorial` 是一个简单的教程."

#: ../../source/tutorial/part1_studio.rst:4
msgid "Part 1: Simple survey (for oTree Studio users)"
msgstr "第一部分：简单的调查问卷(适用于oTree Studio用户)"

#: ../../source/tutorial/part1_studio.rst:6 ../../source/tutorial/part2.rst:4
msgid ""
"(A video of this tutorial is on `YouTube <https://www.youtube.com/channel/"
"UCR9BIa4PqQJt1bjXoe7ffPg/videos>`__ )"
msgstr ""
"(一个视频教程在这里 `YouTube <https://www.youtube.com/channel/"
"UCR9BIa4PqQJt1bjXoe7ffPg/videos>`__ )"

#: ../../source/tutorial/part1_studio.rst:10
#: ../../source/tutorial/part1_texteditor.rst:4
msgid ""
"Let's create a simple survey -- on the first page, we ask the participant for "
"their name and age, then on the next page, display this info back to them."
msgstr ""
"我们来创建一个简单的问卷调查--在第一个页面上，将询问参与人的姓名与年龄，之后在第"
"二个页面上，将此信息展示给参与人."

#: ../../source/tutorial/part1_studio.rst:14
msgid "Player model"
msgstr "玩家模型"

#: ../../source/tutorial/part1_studio.rst:16
msgid "In the sidebar, go to the Player model. Let's add 2 fields:"
msgstr "在侧边栏，点击玩家模型。我们来添加两个字段："

#: ../../source/tutorial/part1_studio.rst:19
msgid "``name`` (``StringField``, meaning text characters)"
msgstr "``name`` (``StringField``, 意为文本型数据)"

#: ../../source/tutorial/part1_studio.rst:20
msgid "``age`` (``IntegerField``)"
msgstr "``age`` (``IntegerField``)"

#: ../../source/tutorial/part1_studio.rst:24 ../../source/tutorial/part2.rst:79
msgid "Pages"
msgstr "页面"

#: ../../source/tutorial/part1_studio.rst:26
#: ../../source/tutorial/part1_texteditor.rst:42
msgid "This survey has 2 pages:"
msgstr "此调查问卷包含2个页面："

#: ../../source/tutorial/part1_studio.rst:28
#: ../../source/tutorial/part1_texteditor.rst:44
msgid "Page 1: players enter their name and age"
msgstr "页面1：玩家输入姓名与年龄"

#: ../../source/tutorial/part1_studio.rst:29
#: ../../source/tutorial/part1_texteditor.rst:45
msgid "Page 2: players see the data they entered on the previous page"
msgstr "页面2：玩家看到他们在之前的页面输入的数据"

#: ../../source/tutorial/part1_studio.rst:31
msgid "So, create 2 pages in your ``page_sequence``: ``Survey`` and ``Results``."
msgstr "所以，在你的 ``page_sequence`` 中创建2个页面：``Survey`` 与 ``Results``."

#: ../../source/tutorial/part1_studio.rst:34
msgid "Page 1"
msgstr "页面1"

#: ../../source/tutorial/part1_studio.rst:36
msgid ""
"First let's define ``Survey``. This page contains a form, so set ``form_model`` "
"to ``player`` and for ``form_fields``, select ``name`` and ``age``."
msgstr ""
"首先我们定义 ``Survey`` 页面.这个页面包含一个表单，将 ``form_model`` 设为 "
"``player`` 并在 ``form_fields`` 中选中 ``name`` 与 ``age``."

#: ../../source/tutorial/part1_studio.rst:39
msgid ""
"Then, set the template's title to ``Enter your information``, and set the "
"content to:"
msgstr "然后, 将模板的标题设为 ``Enter your information``, 并将内容设置如下:"

#: ../../source/tutorial/part1_studio.rst:51
msgid "Page 2"
msgstr "页面2"

#: ../../source/tutorial/part1_studio.rst:53
msgid "Now we define ``Results``."
msgstr "现在我们来定义 ``Results`` 页面."

#: ../../source/tutorial/part1_studio.rst:55
msgid ""
"Set the template's ``title`` block to ``Results`` and set the ``content`` block "
"to:"
msgstr "将模板的标题设为 ``Results`` 并将内容设定如下："

#: ../../source/tutorial/part1_studio.rst:65 ../../source/tutorial/part2.rst:187
msgid "Define the session config"
msgstr "定义session config"

#: ../../source/tutorial/part1_studio.rst:67
msgid ""
"In the sidebar, go to \"Session Configs\", create a session config, and add "
"your survey app to the ``app_sequence``."
msgstr ""
"在侧边栏中, 点击 \"Session Configs\", 创建一个 session config, 并将你的问卷调查"
"应用添加进 ``app_sequence``."

#: ../../source/tutorial/part1_studio.rst:71
msgid "Download and run"
msgstr "下载与运行"

#: ../../source/tutorial/part1_studio.rst:73
msgid ""
"Download the otreezip file and follow the instructions on how to install oTree "
"and run the otreezip file."
msgstr "下载otreezip文件，并按照提示按照otree即可运行这个otreezip文件。"

#: ../../source/tutorial/part1_studio.rst:76
msgid ""
"If there are any problems, you can ask a question on the oTree `discussion "
"group <https://groups.google.com/forum/#!forum/otree>`__."
msgstr ""
"如果遇到任何问题，你可以在oTree `讨论组 <https://groups.google.com/forum/#!"
"forum/otree>`__ 中提问."

#: ../../source/tutorial/part1_texteditor.rst:2
msgid "Part 1: Simple survey (for PyCharm users)"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:8 ../../source/tutorial/part2.rst:20
#: ../../source/tutorial/part3.rst:16
msgid "Create the app"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:10
msgid ""
"Use your command line to ``cd`` to the oTree project folder you created, (which "
"contains a ``settings.py``). Assuming you named the folder ``oTree``, you would "
"do::"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:16
msgid "Then, create the app::"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:20
msgid "Then in PyCharm, go to the folder ``my_simple_survey`` that was created."
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:23
msgid "Define models.py"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:25
msgid ""
"Open ``models.py`` and scroll to the line that says ``class Player(BasePlayer):"
"``. Here we define the columns for the Player table in the database. Let's add "
"2 fields:"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:29
msgid "``name`` (which is a ``StringField``, meaning text characters)"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:30
msgid "``age`` (which is a positive integer field)"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:40
msgid "Define the template"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:47
msgid ""
"So, let's make 2 HTML template files. Next to your ``models.py`` you will find "
"a folder called ``templates/``, which in turn has another subfolder called "
"``my_simple_survey``. Put your templates there."
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:52
msgid "Let's name the first page ``MyPage.html``, and put these contents inside:"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:73
msgid "The second template will be called ``Results.html``."
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:93
msgid "Define pages.py"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:95
msgid ""
"Now we define our pages, which contain the logic for how to display the HTML "
"templates."
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:98
msgid ""
"Since we have 2 templates, we need 2 ``Page`` classes in ``pages.py``. The "
"names should match those of the templates (``MyPage`` and ``Results``)."
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:102
msgid ""
"First let's define ``MyPage``. This page contains a form, so we need to define "
"``form_model`` and ``form_fields``."
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:111
msgid ""
"Now we define ``Results``. This page doesn't have a form or any other special "
"attributes, so we just write \"pass\"."
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:119
msgid ""
"If ``pages.py`` already has a ``WaitPage``, you can delete that, because "
"WaitPages are only necessary for multi-player games."
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:122
msgid ""
"Then, set your ``page_sequence`` to ``MyPage`` followed by ``Results``. So, all "
"in all, ``pages.py`` should contain this:"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:148
msgid "Define the session config in settings.py"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:150
msgid ""
"Now we go to ``settings.py`` in the project's top folder and add an entry to "
"``SESSION_CONFIGS``."
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:164
msgid "Start the server"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:166
msgid "Enter::"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:170
msgid "Then open your browser to ``http://localhost:8000`` to try out the survey."
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:174
msgid "Fix any errors"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:176
msgid ""
"If there is an error in your code, the command line will display a \"traceback"
"\" (error message) that is formatted something like this::"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:199
msgid ""
"It's called a \"traceback\" because it traces the error down through the chain "
"of code. Your first step should be to look at the last lines of the message. "
"Specifically, find the file and line number of the last entry. In the above "
"example, it's ``\"C:\\oTree\\chris\\public_goods_simple\\models.py\", line "
"40``. So, go to that file & line number. Look for the problem mentioned at the "
"last line of the traceback. In this example, it is ``IndentationError: expected "
"an indented block`` (which indicates that the problem has to do with code "
"indentation). Try to fix the error then run the command again."
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:209
msgid ""
"Sometimes the last line of the traceback refers to a file that is not part of "
"your code. For example, in the below traceback, the last line refers to ``/site-"
"packages/easymoney.py``, which is not part of my app, but rather an external "
"package::"
msgstr ""

#: ../../source/tutorial/part1_texteditor.rst:252
msgid ""
"In these situations, look to see if any of your code is contained in the "
"traceback. Above we can see that the traceback goes through the file ``/Users/"
"chris/oTree/public_goods/pages.py``, which is part of my project. The bug is on "
"line 108, as indicated."
msgstr ""

#: ../../source/tutorial/part2.rst:2
msgid "Part 2: Public goods game"
msgstr ""

#: ../../source/tutorial/part2.rst:8
msgid ""
"We will now create a simple `public goods game <https://en.wikipedia.org/wiki/"
"Public_goods_game>`__. The public goods game is a classic game in economics."
msgstr ""

#: ../../source/tutorial/part2.rst:11
msgid ""
"This is a three player game where each player is initially endowed with 100 "
"points. Each player individually makes a decision about how many of their "
"points they want to contribute to the group. The combined contributions are "
"multiplied by 2, and then divided evenly three ways and redistributed back to "
"the players."
msgstr ""

#: ../../source/tutorial/part2.rst:15
msgid ""
"The full code for the app we will write is `here <https://github.com/oTree-org/"
"oTree/tree/master/public_goods_simple>`__."
msgstr ""

#: ../../source/tutorial/part2.rst:22
msgid ""
"Just as in the previous part of the tutorial, create another app, called "
"``my_public_goods``."
msgstr ""

#: ../../source/tutorial/part2.rst:26 ../../source/tutorial/part3.rst:21
msgid "Constants"
msgstr ""

#: ../../source/tutorial/part2.rst:28
msgid "Go to your app's Constants. (For more info, see :ref:`constants`.)"
msgstr ""

#: ../../source/tutorial/part2.rst:31
msgid ""
"Set ``players_per_group`` to 3. oTree will then automatically divide players "
"into groups of 3."
msgstr ""

#: ../../source/tutorial/part2.rst:33
msgid ""
"The endowment to each player is 1000 points. So, let's define ``endowment`` and "
"set it to a currency value of ``1000``."
msgstr ""

#: ../../source/tutorial/part2.rst:35
msgid ""
"Each contribution is multiplied by 2. So define an integer constant called "
"``multiplier = 2``:"
msgstr ""

#: ../../source/tutorial/part2.rst:38
msgid "Now we have the following constants:"
msgstr ""

#: ../../source/tutorial/part2.rst:48
msgid ""
"After the game is played, what data points will we need about each player? It's "
"important to record how much each person contributed. So, go to the Player "
"model and define a ``contribution`` column:"
msgstr ""

#: ../../source/tutorial/part2.rst:62
msgid ""
"We also need to record the payoff the user makes at the end of the game, but we "
"don't need to explicitly define a ``payoff`` field, because in oTree, the "
"Player already contains a ``payoff`` column."
msgstr ""

#: ../../source/tutorial/part2.rst:66
msgid ""
"What data points are we interested in recording about each group? We might be "
"interested in knowing the total contributions to the group, and the individual "
"share returned to each player. So, we define those 2 fields on the Group:"
msgstr ""

#: ../../source/tutorial/part2.rst:81
msgid "This game has 3 pages:"
msgstr ""

#: ../../source/tutorial/part2.rst:83
msgid "Page 1: players decide how much to contribute"
msgstr ""

#: ../../source/tutorial/part2.rst:84
msgid "Page 2: Wait page: players wait for others in their group"
msgstr ""

#: ../../source/tutorial/part2.rst:85
msgid "Page 3: players are told the results"
msgstr ""

#: ../../source/tutorial/part2.rst:88
msgid "Page 1: Contribute"
msgstr ""

#: ../../source/tutorial/part2.rst:90
msgid ""
"First let's define ``Contribute``. This page contains a form, so we need to "
"define ``form_model`` and ``form_fields``. Specifically, this form should let "
"you set the ``contribution`` field on the player. (For more info, see :ref:"
"`forms`.)"
msgstr ""

#: ../../source/tutorial/part2.rst:102
msgid "Now, we create the HTML template."
msgstr ""

#: ../../source/tutorial/part2.rst:104
msgid "Set the ``title`` block to ``Contribute``, and the ``content`` block to:"
msgstr ""

#: ../../source/tutorial/part2.rst:122
msgid "Page 2: ResultsWaitPage"
msgstr ""

#: ../../source/tutorial/part2.rst:124
msgid ""
"When all players have completed the ``Contribute`` page, the players' payoffs "
"can be calculated. Go to your Group model and add a method called "
"``set_payoffs`` (note that ``self`` refers to the group):"
msgstr ""

#: ../../source/tutorial/part2.rst:139
msgid ""
"After a player makes a contribution, they cannot see the results page right "
"away; they first need to wait for the other players to contribute. You "
"therefore need to add a ``WaitPage``. Let's call it ``ResultsWaitPage``. When a "
"player arrives at a wait page, they must wait until all other players in the "
"group have arrived. Then everyone can proceed to the next page. (For more info, "
"see :ref:`wait_pages`)."
msgstr ""

#: ../../source/tutorial/part2.rst:147
msgid ""
"Add ``after_all_players_arrive`` method to ``ResultsWaitPage``, and set it to "
"trigger the ``set_payoffs`` method:"
msgstr ""

#: ../../source/tutorial/part2.rst:155
msgid "Page 3: Results"
msgstr ""

#: ../../source/tutorial/part2.rst:157
msgid "Now we create a page called ``Results``. Set the template's content to:"
msgstr ""

#: ../../source/tutorial/part2.rst:173
msgid "Page sequence"
msgstr ""

#: ../../source/tutorial/part2.rst:175
msgid "Make sure your page_sequence is correct:"
msgstr ""

#: ../../source/tutorial/part2.rst:189
msgid ""
"We add another session config with ``my_public_goods`` in the app sequence."
msgstr ""

#: ../../source/tutorial/part2.rst:193
msgid "Run the code"
msgstr ""

#: ../../source/tutorial/part2.rst:195 ../../source/tutorial/part3.rst:247
msgid ""
"Load the project again then open your browser to ``http://localhost:8000``."
msgstr ""

#: ../../source/tutorial/part2.rst:200
msgid "Troubleshoot with print()"
msgstr ""

#: ../../source/tutorial/part2.rst:202
msgid ""
"I often read messages on programming forums like, \"My program is not working. "
"I can't find the mistake, even though I have spent hours looking at my code\"."
msgstr ""

#: ../../source/tutorial/part2.rst:206
msgid ""
"The solution is not to re-read the code until you find an error; it's to "
"interactively **test** your program."
msgstr ""

#: ../../source/tutorial/part2.rst:209
msgid ""
"The simplest way is using ``print()`` statements. If you don't learn this "
"technique, you won't be able to program games effectively."
msgstr ""

#: ../../source/tutorial/part2.rst:212
msgid "You just need to insert a line in your code like this:"
msgstr ""

#: ../../source/tutorial/part2.rst:218
msgid ""
"Put this line in the part of your code that's not working, such as the payoff "
"method defined above. When you play the game in your browser and that code gets "
"executed, your print statement will be displayed in your command prompt window "
"(not in your web browser)."
msgstr ""

#: ../../source/tutorial/part2.rst:224
msgid "You can sprinkle lots of prints in your code"
msgstr ""

#: ../../source/tutorial/part2.rst:244
msgid "print statement not displayed in console/logs"
msgstr ""

#: ../../source/tutorial/part2.rst:246
msgid ""
"If you don't see the output of the print statement in your console window, that "
"means that line is not getting executed! (Which is why it isn't working.)"
msgstr ""

#: ../../source/tutorial/part2.rst:249
msgid ""
"Maybe it's because your code is in some unreachable place like after a "
"``return`` statement, or inside an \"if\" statement that is always ``False``. "
"Start putting print statements from the top of the method, then see where they "
"stop getting displayed."
msgstr ""

#: ../../source/tutorial/part2.rst:253
msgid ""
"Or maybe your code is in a method that never gets called (executed). oTree's "
"built-in methods such as ``creating_session`` and ``before_next_page`` are "
"automatically executed, but if you define a custom method such as "
"``set_payoffs``, you need to remember to call that function from a built-in "
"method."
msgstr ""

#: ../../source/tutorial/part3.rst:2
msgid "Part 3: Trust game"
msgstr ""

#: ../../source/tutorial/part3.rst:4
msgid ""
"Now let's create a 2-player `Trust game <https://en.wikibooks.org/wiki/"
"Bestiary_of_Behavioral_Economics/Trust_Game>`__, and learn some more features "
"of oTree."
msgstr ""

#: ../../source/tutorial/part3.rst:7
msgid ""
"To start, Player 1 receives 10 points; Player 2 receives nothing. Player 1 can "
"send some or all of his points to Player 2. Before P2 receives these points "
"they will be tripled. Once P2 receives the tripled points he can decide to send "
"some or all of his points to P1."
msgstr ""

#: ../../source/tutorial/part3.rst:12
msgid ""
"The completed app is `here <https://github.com/oTree-org/oTree/tree/master/"
"trust_simple>`__."
msgstr ""

#: ../../source/tutorial/part3.rst:18
msgid ""
"Just as in the previous part of the tutorial, create another app, called "
"``my_trust``."
msgstr ""

#: ../../source/tutorial/part3.rst:23
msgid "Go to your app's Constants."
msgstr ""

#: ../../source/tutorial/part3.rst:25
msgid ""
"First we define our app's constants. The endowment is 10 points and the "
"donation gets tripled."
msgstr ""

#: ../../source/tutorial/part3.rst:40
msgid "Models"
msgstr ""

#: ../../source/tutorial/part3.rst:42
msgid ""
"Then we add fields to player and group. There are 2 critical data points to "
"record: the \"sent\" amount from P1, and the \"sent back\" amount from P2."
msgstr ""

#: ../../source/tutorial/part3.rst:46
msgid "Your first instinct may be to define the fields on the Player like this:"
msgstr ""

#: ../../source/tutorial/part3.rst:56
msgid ""
"The problem with this model is that ``sent_amount`` only applies to P1, and "
"``sent_back_amount`` only applies to P2. It does not make sense that P1 should "
"have a field called ``sent_back_amount``. How can we make our data model more "
"accurate?"
msgstr ""

#: ../../source/tutorial/part3.rst:61
msgid ""
"We can do it by defining those fields at the ``Group`` level. This makes sense "
"because each group has exactly 1 ``sent_amount`` and exactly 1 "
"``sent_back_amount``:"
msgstr ""

#: ../../source/tutorial/part3.rst:76
msgid ""
"We also define a method called ``sent_back_amount_choices`` to populate the "
"dropdown menu dynamically. This is the feature called ``{field_name}_choices``, "
"which is explained here: :ref:`dynamic_validation`."
msgstr ""

#: ../../source/tutorial/part3.rst:90
msgid "Define the templates and pages"
msgstr ""

#: ../../source/tutorial/part3.rst:92
msgid "We need 3 pages:"
msgstr ""

#: ../../source/tutorial/part3.rst:94
msgid "P1's \"Send\" page"
msgstr ""

#: ../../source/tutorial/part3.rst:95
msgid "P2's \"Send back\" page"
msgstr ""

#: ../../source/tutorial/part3.rst:96
msgid "\"Results\" page that both users see."
msgstr ""

#: ../../source/tutorial/part3.rst:99
msgid "Send page"
msgstr ""

#: ../../source/tutorial/part3.rst:111
msgid ""
"We use :ref:`is_displayed` to only show this to P1; P2 skips the page. For more "
"info on ``id_in_group``, see :ref:`groups`."
msgstr ""

#: ../../source/tutorial/part3.rst:114
msgid ""
"For the template, set the ``title`` to ``Trust Game: Your Choice``, and "
"``content`` to:"
msgstr ""

#: ../../source/tutorial/part3.rst:129
msgid "SendBack.html"
msgstr ""

#: ../../source/tutorial/part3.rst:131
msgid ""
"This is the page that P2 sees to send money back. Set the ``title`` block to "
"``Trust Game: Your Choice``, and the ``content`` block to:"
msgstr ""

#: ../../source/tutorial/part3.rst:147
msgid "Here is the page code. Notes:"
msgstr ""

#: ../../source/tutorial/part3.rst:149
msgid ""
"We use :ref:`vars_for_template` to pass the variable ``tripled_amount`` to the "
"template. You cannot do calculations directly in the HTML code, so this number "
"needs to be calculated in Python code and passed to the template."
msgstr ""

#: ../../source/tutorial/part3.rst:170
msgid "Results"
msgstr ""

#: ../../source/tutorial/part3.rst:172
#, python-format
msgid ""
"The results page needs to look slightly different for P1 vs. P2. So, we use the "
"``{% if %}`` statement to condition on the current player's ``id_in_group``. "
"Set the ``title`` block to ``Results``, and the content block to:"
msgstr ""

#: ../../source/tutorial/part3.rst:203
msgid "Wait pages and page sequence"
msgstr ""

#: ../../source/tutorial/part3.rst:205
msgid "Add 2 wait pages:"
msgstr ""

#: ../../source/tutorial/part3.rst:207
msgid "``WaitForP1`` (P2 needs to wait while P1 decides how much to send)"
msgstr ""

#: ../../source/tutorial/part3.rst:208
msgid ""
"``ResultsWaitPage`` (P1 needs to wait while P2 decides how much to send back)"
msgstr ""

#: ../../source/tutorial/part3.rst:210
msgid ""
"After the second wait page, we should calculate the payoffs. So, we define a "
"method on the Group called ``set_payoffs``:"
msgstr ""

#: ../../source/tutorial/part3.rst:221
msgid "Then in ``ResultsWaitPage``, set ``after_all_players_arrive``:"
msgstr ""

#: ../../source/tutorial/part3.rst:227
msgid "Make sure they are ordered correctly in the page_sequence:"
msgstr ""

#: ../../source/tutorial/part3.rst:240
msgid "Add an entry to your ``SESSION_CONFIGS``"
msgstr ""

#: ../../source/tutorial/part3.rst:242
msgid "Create a session config with ``my_trust`` in the app sequence."
msgstr ""

#: ../../source/tutorial/part3.rst:245
msgid "Run the server"
msgstr ""
