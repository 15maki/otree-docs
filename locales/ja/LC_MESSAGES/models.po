# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, oTree team
# This file is distributed under the same license as the oTree package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: oTree \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-19 01:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/models.rst:2
msgid "Models"
msgstr ""

#: ../../source/models.rst:4
msgid "An oTree app has 3 data models: Subsession, Group, and Player."
msgstr ""

#: ../../source/models.rst:6
msgid ""
"A player is part of a group, which is part of a subsession. See "
":ref:`conceptual_overview`."
msgstr ""

#: ../../source/models.rst:9
msgid "Let's say you want your experiment to generate data that looks like this::"
msgstr ""

#: ../../source/models.rst:18
msgid "Here is how to define the above table structure:"
msgstr ""

#: ../../source/models.rst:27
msgid ""
"So, a **model** is essentially a database table. And a **field** is a "
"column in a table."
msgstr ""

#: ../../source/models.rst:31
msgid "Fields"
msgstr ""

#: ../../source/models.rst:34
msgid "Field types"
msgstr ""

#: ../../source/models.rst:36
msgid "``BooleanField`` (for true/false and yes/no values)"
msgstr ""

#: ../../source/models.rst:37
msgid "``CurrencyField`` for currency amounts; see :ref:`currency`."
msgstr ""

#: ../../source/models.rst:38
msgid "``IntegerField``"
msgstr ""

#: ../../source/models.rst:39
msgid "``FloatField`` (for real numbers)"
msgstr ""

#: ../../source/models.rst:40
msgid "``StringField`` (for text strings)"
msgstr ""

#: ../../source/models.rst:41
msgid ""
"``LongStringField`` (for long text strings; its form widget is a multi-"
"line textarea)"
msgstr ""

#: ../../source/models.rst:45
msgid "Initial/default value"
msgstr ""

#: ../../source/models.rst:47
msgid "Your field's initial value will be ``None``, unless you set ``initial=``:"
msgstr ""

#: ../../source/models.rst:56
msgid "min, max, choices"
msgstr ""

#: ../../source/models.rst:58
msgid ""
"For info on how to set a field's ``min``, ``max``, or ``choices``, see "
":ref:`form-validation`."
msgstr ""

#: ../../source/models.rst:62
msgid "Built-in fields and methods"
msgstr ""

#: ../../source/models.rst:64
msgid ""
"Player, group, and subsession already have some predefined fields. For "
"example, ``Player`` has fields called ``payoff`` and ``id_in_group``, as "
"well as methods like ``in_all_rounds()`` and ``get_others_in_group()``."
msgstr ""

#: ../../source/models.rst:69
msgid "These built-in fields and methods are listed below."
msgstr ""

#: ../../source/models.rst:73
msgid "Subsession"
msgstr ""

#: ../../source/models.rst:76
msgid "session"
msgstr ""

#: ../../source/models.rst:78
msgid "The session this subsession belongs to. See :ref:`object_model`."
msgstr ""

#: ../../source/models.rst:83
msgid "round_number"
msgstr ""

#: ../../source/models.rst:85
msgid ""
"Gives the current round number. Only relevant if the app has multiple "
"rounds (set in ``Constants.num_rounds``). See :ref:`rounds`."
msgstr ""

#: ../../source/models.rst:93
msgid "creating_session()"
msgstr ""

#: ../../source/models.rst:95
msgid ""
"``creating_session`` allows you to set initial values on fields on "
"players, groups, participants, or the subsession. For example:"
msgstr ""

#: ../../source/models.rst:107
msgid ""
"More info on the section on :ref:`treatments <treatments>` and "
":ref:`group shuffling <shuffling>`."
msgstr ""

#: ../../source/models.rst:110
msgid ""
"Unlike most other built-in subsession methods, this method is one you "
"must define yourself."
msgstr ""

#: ../../source/models.rst:113
msgid ""
"``creating_session`` is **not** run at the beginning of each round. It is"
" run when you click the \"create session\" button, i.e. before anybody "
"starts playing. If your app has multiple rounds, ``creating_session`` "
"gets run multiple times consecutively:"
msgstr ""

#: ../../source/models.rst:125
msgid "Will output all at once::"
msgstr ""

#: ../../source/models.rst:133
msgid "get_groups()"
msgstr ""

#: ../../source/models.rst:135
msgid "Returns a list of all the groups in the subsession."
msgstr ""

#: ../../source/models.rst:138
msgid "get_players()"
msgstr ""

#: ../../source/models.rst:140
msgid "Returns a list of all the players in the subsession."
msgstr ""

#: ../../source/models.rst:143
msgid "Other subsession methods"
msgstr ""

#: ../../source/models.rst:145
msgid ":ref:`group_randomly() <shuffling>`"
msgstr ""

#: ../../source/models.rst:146
msgid ":ref:`group_like_round() <shuffling>`"
msgstr ""

#: ../../source/models.rst:147
msgid ":ref:`get_group_matrix() <shuffling>`"
msgstr ""

#: ../../source/models.rst:148
msgid ":ref:`set_group_matrix() <shuffling>`"
msgstr ""

#: ../../source/models.rst:149 ../../source/models.rst:168
#: ../../source/models.rst:198
msgid ":ref:`in_all_rounds() <in_rounds>`"
msgstr ""

#: ../../source/models.rst:150 ../../source/models.rst:169
#: ../../source/models.rst:199
msgid ":ref:`in_previous_rounds() <in_rounds>`"
msgstr ""

#: ../../source/models.rst:151 ../../source/models.rst:170
#: ../../source/models.rst:200
msgid ":ref:`in_rounds(first, last) <in_rounds>`"
msgstr ""

#: ../../source/models.rst:152 ../../source/models.rst:171
#: ../../source/models.rst:201
msgid ":ref:`in_round(round_number) <in_rounds>`"
msgstr ""

#: ../../source/models.rst:156
msgid "Group"
msgstr ""

#: ../../source/models.rst:159
msgid "session/subsession"
msgstr ""

#: ../../source/models.rst:161
msgid "The session/subsession this group belongs to. See :ref:`object_model`."
msgstr ""

#: ../../source/models.rst:166
msgid "Other group methods"
msgstr ""

#: ../../source/models.rst:172
msgid ":ref:`get_player_by_role(role) <groups>`"
msgstr ""

#: ../../source/models.rst:173
msgid ":ref:`get_player_by_id(id_in_group) <groups>`"
msgstr ""

#: ../../source/models.rst:174
msgid ":ref:`get_players() <groups>`"
msgstr ""

#: ../../source/models.rst:178
msgid "Player"
msgstr ""

#: ../../source/models.rst:181
msgid "id_in_group"
msgstr ""

#: ../../source/models.rst:182
msgid ""
"Automatically assigned integer starting from 1. In multiplayer games, "
"indicates whether this is player 1, player 2, etc."
msgstr ""

#: ../../source/models.rst:186
msgid "payoff"
msgstr ""

#: ../../source/models.rst:187
msgid "The player's payoff in this round. See :ref:`payoff`."
msgstr ""

#: ../../source/models.rst:190
msgid "session/subsession/group/participant"
msgstr ""

#: ../../source/models.rst:192
msgid ""
"The session/subsession/group/participant this player belongs to. See "
":ref:`object_model`."
msgstr ""

#: ../../source/models.rst:196
msgid "Other player methods"
msgstr ""

#: ../../source/models.rst:202
msgid ":ref:`get_others_in_subsession() <groups>`"
msgstr ""

#: ../../source/models.rst:203
msgid ":ref:`get_others_in_group() <groups>`"
msgstr ""

#: ../../source/models.rst:206
msgid "Session"
msgstr ""

#: ../../source/models.rst:209
msgid "num_participants"
msgstr ""

#: ../../source/models.rst:211
msgid "The number of participants in the session."
msgstr ""

#: ../../source/models.rst:214
msgid "config"
msgstr ""

#: ../../source/models.rst:216
msgid "See :ref:`session_config_treatments`."
msgstr ""

#: ../../source/models.rst:219
msgid "vars"
msgstr ""

#: ../../source/models.rst:221
msgid "See :ref:`session_vars`."
msgstr ""

#: ../../source/models.rst:224
msgid "Participant"
msgstr ""

#: ../../source/models.rst:227
msgid "id_in_session"
msgstr ""

#: ../../source/models.rst:229
msgid ""
"The participant's ID in the session. This is the same as the player's "
"``id_in_subsession``."
msgstr ""

#: ../../source/models.rst:233
msgid "Other participant attributes and methods"
msgstr ""

#: ../../source/models.rst:235
msgid ":ref:`vars <vars>`"
msgstr ""

#: ../../source/models.rst:236
msgid ":ref:`label <participant_label>`"
msgstr ""

#: ../../source/models.rst:237
msgid ":ref:`payoff <payoff>`"
msgstr ""

#: ../../source/models.rst:238
msgid ":ref:`payoff_plus_participation_fee <payoff>`"
msgstr ""

#: ../../source/models.rst:243
msgid "Constants"
msgstr ""

#: ../../source/models.rst:245
msgid ""
"``Constants`` is the recommended place to put your app's parameters and "
"constants that do not vary from player to player."
msgstr ""

#: ../../source/models.rst:249
msgid "Here are the built-in constants:"
msgstr ""

#: ../../source/models.rst:251
msgid "``players_per_group`` (described in :ref:`groups`)"
msgstr ""

#: ../../source/models.rst:252
msgid "``num_rounds`` (described in :ref:`rounds`)"
msgstr ""

#: ../../source/models.rst:254
msgid ""
"if you don't want your app's real name to be displayed in URLs, define a "
"string constant ``name_in_url`` with your desired name."
msgstr ""

#: ../../source/models.rst:258
msgid ""
"Constants can be numbers, strings, booleans, lists, etc. But for more "
"complex data types like dicts, lists of dicts, etc, you should instead "
"define it in a subsession method. For example, instead of defining a "
"Constant called ``my_dict``, do this:"
msgstr ""

#: ../../source/models.rst:270
msgid "Miscellaneous topics"
msgstr ""

#: ../../source/models.rst:273
msgid "Defining your own methods"
msgstr ""

#: ../../source/models.rst:275
msgid ""
"In addition to the methods listed on this page, you can define your own. "
"Just remember to *use* them somewhere! Just defining them with ``def`` "
"has no effect."
msgstr ""

#: ../../source/models.rst:280
msgid "For example:"
msgstr ""

#: ../../source/models.rst:289
msgid "Then call it:"
msgstr ""

#: ../../source/models.rst:299
msgid "About using random()"
msgstr ""

#: ../../source/models.rst:301
msgid ""
"Never generate random values outside of a method. For example, don't do "
"this:"
msgstr ""

#: ../../source/models.rst:309
msgid "If it changes randomly, it isn't a constant."
msgstr ""

#: ../../source/models.rst:311
msgid "Or this:"
msgstr ""

#: ../../source/models.rst:322
msgid ""
"These won't work because they will change every time the server launches "
"a new process. It may appear to work during testing but will eventually "
"break. Instead, you should generate the random variables inside a method,"
" such as :ref:`creating_session` (and preferably not "
"``vars_for_template``, which gets re-executed if the user refreshes the "
"page)."
msgstr ""

#: ../../source/models.rst:329
msgid ""
"If you want to set your own random seed, don't use the ``random.seed()`` "
"function. Instead, generate an instance of ``random.Random`` as described"
" `here <https://stackoverflow.com/a/37356024>`__"
msgstr ""

